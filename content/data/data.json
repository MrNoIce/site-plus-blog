[

    {
      "name": "AutoSearch",
      "description": "I wanted to search the entire internet of cars for sale without having to navigate through promoted vehicles and websites. I used Python and Django’s web templates to interact with my SQLite database. I also wanted to use an external API to gather the data from and store it in my own db for reference. I’ve built this app that uses MarketCheck’s Api. Their bots crawl all of the used car listings and place them in an API. ",
      "image": "./images/profile-image.JPG",
      "gif": "./gifs/autosearch.gif",
      "url": "https://github.com/MrNoIce/Auto-Search-App",
      "tech": [" Python ", "Django ", "Templates ", "REST API ", "Bootstrap"]
    },
    {
      "name": "OurCity",
      "description": "A single page, responsive, CRUD web app built for raising critical infrastructure defects to the officials that have the power to resolve them. I developed the app using react.js, styling with bootstrap, and a simple JSON server for the backend. I used two API’s, one is the Cloudinary API for image upload and storage and the second is the MapBox API for acquiring coordinates for the issue form and the interactive map. ",
      "image": "./images/profile-image.JPG",
      "gif": "./gifs/autosearch.gif",
      "url": "https://github.com/MrNoIce/Front-End-Capstone",
      "tech": [" React ", "MapBox ", "JSON ", "Bootstrap"]
    },
    {
      "name": "Profile",
      "description": "This site is built with Gatsby. A React-based, GraphQL powered, static site generator. It uses powerful preconfiguration to build a website that uses only static files for incredibly fast page loads, service workers, code splitting, server-side rendering, intelligent image loading, asset optimization, and data prefetching. I chose Gatsby so I could learn something new and get some experience with GraphQl.",
      "image": "./images/profile-image.JPG",
      "gif": "./gifs/autosearch.gif",
      "url": "https://github.com/MrNoIce/projectsite",
      "tech": [" Gatsby ", "React ", "GraphQl " ]
    }
]
